// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StdControllers.Data;

#nullable disable

namespace StdControllers.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250930114258_AddRefreshTokens")]
    partial class AddRefreshTokens
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("StdControllers.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HR")
                        .HasColumnType("TEXT");

                    b.Property<string>("Headquarters")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HR = "Some Teacher",
                            Headquarters = "Stockholm",
                            Name = "Dev School"
                        },
                        new
                        {
                            Id = 2,
                            HR = "Cool Name",
                            Headquarters = "Göteborg",
                            Name = "Nice Small Company"
                        });
                });

            modelBuilder.Entity("StdControllers.Models.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("ApplicationDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("StatusId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StatusId");

                    b.ToTable("JobApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationDate = new DateOnly(2025, 8, 12),
                            CompanyId = 1,
                            Location = "Stockholm - On Site",
                            Role = "C# Trainee",
                            StatusId = 4
                        },
                        new
                        {
                            Id = 2,
                            ApplicationDate = new DateOnly(2025, 9, 12),
                            CompanyId = 2,
                            Location = "Göteborg - Full Remote",
                            Role = "C# Consultant",
                            StatusId = 7
                        },
                        new
                        {
                            Id = 3,
                            ApplicationDate = new DateOnly(2025, 9, 29),
                            Location = "Full Remote",
                            Role = "C# Dev",
                            StatusId = 2
                        });
                });

            modelBuilder.Entity("StdControllers.Models.JobApplicationStatuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JobApplicationStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "To Apply"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Applied"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Scheduled Action"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Interview"
                        },
                        new
                        {
                            Id = 5,
                            Name = "No Answer"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Discarded"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Offer"
                        });
                });

            modelBuilder.Entity("StdControllers.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefreshTokenExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StdControllers.Models.JobApplication", b =>
                {
                    b.HasOne("StdControllers.Models.Company", "Company")
                        .WithMany("JobApplications")
                        .HasForeignKey("CompanyId");

                    b.HasOne("StdControllers.Models.JobApplicationStatuses", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Company");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("StdControllers.Models.Company", b =>
                {
                    b.Navigation("JobApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
